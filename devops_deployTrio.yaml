version: "1.0"
stages:
  - clone
  - "prep"
  - "deploy"
  - "test"

hooks:
  on_fail:
    steps:
      exec:
        type: slack-post-channel:0.0.7
        arguments:
          SLACK_TOKEN: ${{LR_SLACK_TOKEN}}
          SLACK_CHANNEL: ${{SLACK_CHANNEL}}
          SLACK_MESSAGE: "Deployment build for ${{APPNAME}} failed. See ${{CF_BUILD_URL}}"

steps:
  clone:
    title: "Cloning repository"
    stage: "clone"
    type: "git-clone"
    repo: "aperture-sci/DevOps"
    revision: "main"
    git: github-lr
    depth: 1
    exclude_blobs: true

  get_chart_version:
    title: "Get the version of the chart"
    image: mikefarah/yq:3.3.4
    stage: prep
    working_directory: ${{clone}}
    commands:
      - |
        CVERSION=$(yq  r manifests/$APPNAME/$APPENV/Chart.yaml 'appVersion')
        cf_export CVERSION=$CVERSION
        export RND=$(( ( RANDOM % 100 )  + 1 ))
        cf_export RND=$RND
        echo "Random: $RND"
        if [ $RND -le 7 ] ; then
          cf_export PART="minor"
        else
          cf_export PART="patch"
        fi

  create_branch:
    title: "Create temp branch"
    image: maniator/gh
    working_directory: ${{clone}}
    stage: prep
    commands:
      - |
        export BRANCH="trio-dev-temp-$(date +%s)"
        cf_export BRANCH=$BRANCH
        git checkout -b $BRANCH

  bumpVersion:
    type: semversioner:0.1.6
    stage: prep
    arguments:
      SEMVERSIONER_VERSION: ${{CVERSION}}
      SEMVERSIONER_ACTION: bump
      SEMVERSIONER_PART: ${{PART}}

  getimages:
    title: "Get Latest Images for trio app"
    working_directory: ${{clone}}
    stage: "prep"
    image: 'codefresh/cli:0.89.3'
    commands:
      - cf_export APPVERSION=${{steps.bumpVersion.output.SEMVERSIONER_RESULT}}
      - echo "Get latest version of images"
      - yq -y --arg tag "$(codefresh get images --image-name ctrlr --limit 2 --branch main -o yaml --tag main | yq -r .items[1].tag -)" '."ctrlr".image.tag = $tag' manifests/$APPNAME/$APPENV/values.yaml -i
      - yq -y --arg tag "$(codefresh get images --image-name buslog --limit 2 --branch main -o yaml --tag main | yq -r .items[1].tag -)" '."buslog".image.tag = $tag' manifests/$APPNAME/$APPENV/values.yaml -i
      - yq -y --arg tag "$(codefresh get images --image-name flask-ui --limit 2 --branch main -o yaml --tag main | yq -r .items[1].tag -)" '."flask-ui".image.tag = $tag' manifests/$APPNAME/$APPENV/values.yaml -i
      - cat manifests/$APPNAME/$APPENV/values.yaml
      - yq -y  --arg tag  "${{steps.bumpVersion.output.SEMVERSIONER_RESULT}}" '.appVersion = $tag' manifests/$APPNAME/$APPENV/Chart.yaml -i
      - cat manifests/$APPNAME/$APPENV/Chart.yaml

  create_pr:
    title: "Create ENV PR"
    image: lrochette/ghssh:0.0.4
    working_directory: ${{clone}}
    stage: deploy
    commands:
      - |-
        echo "Setup ssh"
        mkdir -p ~/.ssh
        echo "${SSH_KEY}" | tr ',' '\n' > ~/.ssh/id_ed25519
        touch ~/.ssh/known_hosts
        chmod 0600 ~/.ssh/*
        chmod 0700 ~/.ssh
        ssh-keygen -R github.com
        ssh-keyscan -H github.com >> ~/.ssh/known_hosts 2> >(grep -v '^#' >&2)
      - |-
        echo "Setup git"
        git config --global user.email "laurent.rochette@octopus.com"
        git config --global user.name "Laurent Rochette"
        git add \
          manifests/$APPNAME/$APPENV/values.yaml \
          manifests/$APPNAME/$APPENV/Chart.yaml

        git commit -m '[promotion:trio-flow] ${{COMMIT_MESSAGE}} for ${{APPENV}}'
        git push -u origin "$BRANCH"
      - |-
        echo "Create PR"
        gh pr create -B main -H "$BRANCH" \
          -t "Automated PR to push Dev tag $TAG" \
          -b "This PR updates the content of the file as part of an automated workflow."
      - |-
        echo "merge PR"
        gh pr merge "$BRANCH" --merge --delete-branch
    on_success:
      annotations:
        set:
         - annotations:
           - appVersion: ${{APPVERSION}}
